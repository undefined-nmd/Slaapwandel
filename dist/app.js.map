{"version":3,"sources":["../src/app.js"],"names":["app","url","ngrok","connect","apiUrl","getUrl","api","getApi","data","get","JSON","parse","console","log","tunnels","public_url","disable","set","path","join","__dirname","use","skip","bodyParser","json","urlencoded","extended","express","static","routes","req","res","next","err","Error","status","render","message"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,MAAM,wBAAZ;;AAEA,CAAC,kBAAiB;AAChB,QAAMC,MAAM,MAAMC,gBAAMC,OAAN,CAAc,IAAd,CAAlB;AACA,QAAMC,SAASF,gBAAMG,MAAN,EAAf;AACA,QAAMC,MAAMJ,gBAAMK,MAAN,EAAZ;AACA,MAAIC,OAAO,MAAMF,IAAIG,GAAJ,CAAQ,aAAR,CAAjB;AACAD,SAAOE,KAAKC,KAAL,CAAWH,IAAX,CAAP;AACAI,UAAQC,GAAR,CAAY,WAAWL,KAAKM,OAAL,CAAa,CAAb,EAAgBC,UAAvC;AAED,CARD;AASAf,IAAIgB,OAAJ,CAAY,cAAZ;;AAEA;AACAhB,IAAIiB,GAAJ,CAAQ,OAAR,EAAiBC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAjB;AACApB,IAAIiB,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEAjB,IAAIqB,GAAJ,CAAQ,sBAAO,KAAP,EAAc;AACpBC,QAAM,MAAMtB,IAAIS,GAAJ,CAAQ,KAAR,MAAmB;AADX,CAAd,CAAR;AAGAT,IAAIqB,GAAJ,CAAQE,qBAAWC,IAAX,EAAR;AACAxB,IAAIqB,GAAJ,CAAQE,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACA1B,IAAIqB,GAAJ,CAAQM,kBAAQC,MAAR,CAAeV,eAAKC,IAAL,CAAUC,SAAV,EAAqB,WAArB,CAAf,CAAR;;AAEA;AACApB,IAAIqB,GAAJ,CAAQ,GAAR,EAAaQ,gBAAb;AACA7B,IAAIqB,GAAJ,CAAQ,SAAR,EAAmBQ,gBAAnB;;AAEA;AACA7B,IAAIqB,GAAJ,CAAQ,CAACS,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC1B,QAAMC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAZ;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAjC,IAAIqB,GAAJ,CAAQ,CAACY,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AAAE;AACjCD,MACGI,MADH,CACUF,IAAIE,MAAJ,IAAc,GADxB,EAEGC,MAFH,CAEU,OAFV,EAEmB;AACfC,aAASJ,IAAII;AADE,GAFnB;AAKD,CAND;;kBAQerC,G","file":"app.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport logger from 'morgan';\nimport bodyParser from 'body-parser';\nimport routes from './routes';\nimport ngrok from 'ngrok';\n\nconst app = express();\n\n(async function() {\n  const url = await ngrok.connect(8080);\n  const apiUrl = ngrok.getUrl();\n  const api = ngrok.getApi();\n  let data = await api.get('api/tunnels');\n  data = JSON.parse(data);\n  console.log(\"saved \" + data.tunnels[0].public_url);\n\n})();\napp.disable('x-powered-by');\n\n// View engine setup\napp.set('views', path.join(__dirname, '../views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev', {\n  skip: () => app.get('env') === 'test'\n}));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(express.static(path.join(__dirname, '../public')));\n\n// Routes\napp.use('/', routes);\napp.use('/signup', routes);\n\n// Catch 404 and forward to error handler\napp.use((req, res, next) => {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// Error handler\napp.use((err, req, res, next) => { // eslint-disable-line no-unused-vars\n  res\n    .status(err.status || 500)\n    .render('error', {\n      message: err.message\n    });\n});\n\nexport default app;\n"]}
